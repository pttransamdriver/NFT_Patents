import { balancesHaveChanged } from "./assertions/balances-have-changed.js";
import { emitWithArgs } from "./assertions/emit/emit-with-args.js";
import { emit } from "./assertions/emit/emit.js";
import { revertWithCustomErrorWithArgs } from "./assertions/revert/revert-with-custom-error-with-args.js";
import { revertWithCustomError } from "./assertions/revert/revert-with-custom-error.js";
import { revertWith } from "./assertions/revert/revert-with.js";
import { revert } from "./assertions/revert/revert.js";
export class HardhatViemAssertionsImpl {
    #viem;
    constructor(viem) {
        this.#viem = viem;
    }
    async balancesHaveChanged(resolvedTxHash, changes) {
        return balancesHaveChanged(this.#viem, resolvedTxHash, changes);
    }
    async emit(contractFn, contract, eventName) {
        return emit(this.#viem, contractFn, contract, eventName);
    }
    async emitWithArgs(contractFn, contract, eventName, args) {
        return emitWithArgs(this.#viem, contractFn, contract, eventName, args);
    }
    async revert(contractFn) {
        return revert(contractFn);
    }
    async revertWith(contractFn, expectedRevertReason) {
        return revertWith(contractFn, expectedRevertReason);
    }
    async revertWithCustomError(contractFn, contract, customErrorName) {
        return revertWithCustomError(contractFn, contract, customErrorName);
    }
    async revertWithCustomErrorWithArgs(contractFn, contract, customErrorName, args) {
        return revertWithCustomErrorWithArgs(contractFn, contract, customErrorName, args);
    }
}
//# sourceMappingURL=viem-assertions.js.map