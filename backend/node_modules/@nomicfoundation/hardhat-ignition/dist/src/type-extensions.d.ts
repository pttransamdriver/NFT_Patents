import "hardhat/types/config";
import type { DeployConfig, StrategyConfig } from "@nomicfoundation/ignition-core";
declare module "hardhat/types/config" {
    interface ProjectPathsUserConfig {
        ignition?: string;
    }
    interface ProjectPathsConfig {
        ignition: string;
    }
    interface EdrNetworkUserConfig {
        ignition?: {
            maxFeePerGasLimit?: bigint;
            maxPriorityFeePerGas?: bigint;
            gasPrice?: bigint;
            disableFeeBumping?: boolean;
            explorerUrl?: string;
        };
    }
    interface EdrNetworkConfig {
        ignition: {
            maxFeePerGasLimit?: bigint;
            maxPriorityFeePerGas?: bigint;
            gasPrice?: bigint;
            disableFeeBumping?: boolean;
            explorerUrl?: string;
        };
    }
    interface HttpNetworkUserConfig {
        ignition?: {
            maxFeePerGasLimit?: bigint;
            maxPriorityFeePerGas?: bigint;
            gasPrice?: bigint;
            disableFeeBumping?: boolean;
            explorerUrl?: string;
        };
    }
    interface HttpNetworkConfig {
        ignition: {
            maxFeePerGasLimit?: bigint;
            maxPriorityFeePerGas?: bigint;
            gasPrice?: bigint;
            disableFeeBumping?: boolean;
            explorerUrl?: string;
        };
    }
    type IgnitionUserConfig = Partial<DeployConfig> & {
        strategyConfig?: Partial<StrategyConfig>;
    };
    interface HardhatUserConfig {
        ignition?: IgnitionUserConfig;
    }
    type IgnitionConfig = Partial<DeployConfig> & {
        strategyConfig?: Partial<StrategyConfig>;
    };
    interface HardhatConfig {
        ignition: IgnitionConfig;
    }
}
//# sourceMappingURL=type-extensions.d.ts.map